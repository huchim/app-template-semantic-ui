const path = require("path");
const HappyPack = require('happypack');
const MiniCssExtractPlugin = require("mini-css-extract-plugin");

module.exports = {
    entry: {
        index: "./configurations/themes/themes.js",
    },
    output: {
        filename: "[name].js",
        path: path.resolve("./dist"),
    },
    resolve: {
        extensions: [ ".js" ],
		alias: {
			'theme': path.join("./configurations/themes/", "app"),
			'../../theme.config$': path.join("./configurations/themes/", "app, 'theme.config')
		}
    },
    module: {
		rules: [
			{
				test: /\.(less)$/,
				use: [
					MiniCssExtractPlugin.loader,
					"css-loader",
					"less-loader"
				]
			},

			// this handles images
			{
				test: /\.jpe?g$|\.gif$|\.ico$|\.png$|\.svg$/,
				use: [
					{
						loader: "file-loader",
						options: {
							name: "images/[name].[ext]?[hash]",
						},
					},
				]
			},

			// the following rules handle font extraction
			{
				test: /\.woff(2)?(\?v=[0-9]\.[0-9]\.[0-9])?$/,
				use: [
					{
						loader: "url-loader",
						options: {
							name: "fonts/[name].[ext]",
							limit: 10000,
							mimetype: "application/font-woff",
						},
					},
				],
			},
			{
				test: /\.(ttf|eot)(\?v=[0-9]\.[0-9]\.[0-9])?$/,
				use: [
					{
						loader: "file-loader",
						options: {
							name: "fonts/[name].[ext]?[hash]",
						},
					},
				],
			},
			{
				test: /\.otf(\?.*)?$/,
				use: [
					{
						loader: "file-loader",
						options: {
							name: "fonts/[name].[ext]",
							mimetype: "application/font-otf",
						},
					},
				],
			}
		]
	},
	plugins: [
		// this handles the bundled .css output file
		new MiniCssExtractPlugin({ filename: "[name].css" }),
	]
};